format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - TEST_APP_URL: https://github.com/bitrise-io/Bitrise-Android-Sample
  - TEST_APP_BRANCH: main
  - TAG: google_apis

workflows:
  test_google_api:
    envs:
    - TEST_APP_URL: https://github.com/bitrise-io/Bitrise-Android-GoogleAPI-Sample.git
    - TEST_APP_BRANCH: main
    - EMU_VER: 26
    - PROFILE: pixel
    - TAG: google_apis
    after_run:
    - _start-emulator
    - _run_ui_test
    - _kill-emulator

  test_emulator_start_23:
    envs:
    - EMU_VER: 23
    - PROFILE: pixel
    after_run:
    - _start-emulator
    - _take_screenshot
    - _kill-emulator

  test_emulator_start_26:
    envs:
    - EMU_VER: 26
    - PROFILE: pixel
    after_run:
    - _start-emulator
    - _take_screenshot
    - _kill-emulator

  test_emulator_start_28:
    envs:
    - EMU_VER: 28
    - PROFILE: pixel
    after_run:
    - _start-emulator
    - _take_screenshot
    - _kill-emulator

  test_emulator_start_29:
    envs:
    - EMU_VER: 29
    - PROFILE: pixel
    after_run:
    - _start-emulator
    - _take_screenshot
    - _kill-emulator

  test_emulator_start_30:
    envs:
    - EMU_VER: 30
    - PROFILE: pixel_2
    after_run:
    - _start-emulator
    - _take_screenshot
    - _kill-emulator

  test_emulator_start_32:
    envs:
    - EMU_VER: 32
    - PROFILE: pixel_2
    - ABI: x86_64
    after_run:
    - _start-emulator
    - _run_ui_test_and_take_screenshot
    - _kill-emulator

  _default_abi_for_host_os:
    steps:
    - script:
        run_if: "{{getenv \"ABI\" | eq \"\"}}"
        inputs:
        - content: |-
            #!/bin/bash
            set -ex

            os=$(uname -s)
            arch=$(uname -m)

            abi=""
            if [[ "$os" == "Darwin" ]] ; then
              if [[ "$arch" == "arm64" ]] ; then
                abi="arm64-v8a"
              elif [[ "$arch" == "x86_64" ]] ; then
                abi="x86"
              fi
            elif [[ "$os" == "Linux" ]] ; then
              abi="x86"
            fi

            if [[ "$abi" == "" ]] ; then
              echo "unsupported: $os-$arch"
              exit 1
            fi

            echo "ABI: $abi"

            envman add --key "ABI" --value "$abi"

  _start-emulator:
    before_run:
    - _default_abi_for_host_os
    steps:
    - path::./:
        title: Step Test
        inputs:
        - profile: $PROFILE
        - api_level: $EMU_VER
        - abi: $ABI
        - tag: $TAG
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            cd ~/.android/avd/emulator.avd
            cat config.ini | grep -i "PlayStore.enabled="
    - script:
        inputs:
        - content: |
            #!/bin/bash
            set -ex

            echo "BITRISE_EMULATOR_SERIAL: $BITRISE_EMULATOR_SERIAL"
            if [ "$BITRISE_EMULATOR_SERIAL" = "emulator-5554" ]
            then
              exit 0
            else
              exit 1
            fi
    - wait-for-android-emulator: { }

  _run_ui_test:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            rm -rf ./_tmp
    - git::https://github.com/bitrise-steplib/bitrise-step-simple-git-clone.git:
        inputs:
        - repository_url: $TEST_APP_URL
        - clone_into_dir: ./_tmp
        - branch: $TEST_APP_BRANCH
    - gradle-runner:
        inputs:
        - gradle_file: ./_tmp/build.gradle
        - gradle_task: connectedAndroidTest
        - gradlew_path: ./_tmp/gradlew
        - app_file_include_filter: dontexport
        - test_apk_file_include_filter: dontexport

  _run_ui_test_and_take_screenshot:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            rm -rf ./_tmp
    - git::https://github.com/bitrise-steplib/bitrise-step-simple-git-clone.git:
        inputs:
        - repository_url: $TEST_APP_URL
        - clone_into_dir: ./_tmp
        - branch: $TEST_APP_BRANCH
    - gradle-runner:
        inputs:
        - gradle_file: ./_tmp/build.gradle
        - gradle_task: connectedDebugAndroidTest
        - gradlew_path: ./_tmp/gradlew
        - app_file_include_filter: dontexport
        - test_apk_file_include_filter: dontexport
    - script:
        inputs:
        - content: |
            #!/bin/bash
            set -euxo pipefail

            SCREENSHOT=./_tmp/app/screenshots/test_screenshot.png
            cp $SCREENSHOT $BITRISE_DEPLOY_DIR/screen_$EMU_VER.png

            if [[ "$OSTYPE" == "darwin"* ]]; then
              brew install tesseract
            elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
              sudo apt-get update
              sudo apt-get install tesseract-ocr -y
            fi

            OUT=./_tmp/out
            tesseract -l eng "$SCREENSHOT" "$OUT"
            cat "${OUT}.txt" | grep 'Hello World!'

  _take_screenshot:
    steps:
    - change-workdir:
        inputs:
        - path: $BITRISE_DEPLOY_DIR
    - script:
        inputs:
        - content: |
            #!/bin/bash
            set -euxo pipefail
            sleep 15
            cd $BITRISE_DEPLOY_DIR
            $ANDROID_HOME/platform-tools/adb -s $BITRISE_EMULATOR_SERIAL shell "screencap -p /sdcard/screen.png"
            $ANDROID_HOME/platform-tools/adb -s $BITRISE_EMULATOR_SERIAL pull "/sdcard/screen.png" "./screen_$EMU_VER.png"

  _kill-emulator:
    steps:
    - script:
        is_always_run: true
        inputs:
        - content: |
            #!/bin/bash
            set -x
            $ANDROID_HOME/platform-tools/adb -s $BITRISE_EMULATOR_SERIAL emu kill
            $ANDROID_HOME/platform-tools/adb devices
            # It takes a bit of time for the simulator to exit
            sleep 5
            $ANDROID_HOME/platform-tools/adb devices
